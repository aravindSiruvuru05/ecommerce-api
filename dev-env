#!/bin/bash

export COMPOSE_FILE=docker-compose.yml
export ENV_FILE=local_env
export DB_CONN=postgresql://user:1234@db:5432/haste_db?sslmode=disable
export DB_MIGRATIONS_PATH=infra/driven/database/migration

if [[ "$1" = "up" ]]; then
    if [ "$2" = "debug" ]; then
        echo "Starting Application in DEBUG MODE...";
        docker-compose -f $COMPOSE_FILE --env-file ${ENV_FILE} up haste.debug db
    else
        echo "Starting Application...";
        docker-compose -f $COMPOSE_FILE --env-file ${ENV_FILE} up haste db
    fi
fi

if [[ "$1" = "exec" ]]; then
    echo "Executing in to container service ${*:2}..."
    docker-compose -f $COMPOSE_FILE --env-file ${ENV_FILE} exec $2 sh
fi

if [[ "$1" = "build" ]]; then
    if [[ "$2" = "debugger" ]]; then
        echo "Building Debugger...";
        docker-compose -f $COMPOSE_FILE --env-file ${ENV_FILE} build --no-cache haste.debug
    else
        echo "Building Application...";
        docker-compose -f $COMPOSE_FILE --env-file ${ENV_FILE} build haste
    fi
fi

if [[ "$1" = "migrate" ]]; then
    if [ "$2" = "down" ] || [ "$2" = "up" ]; then
        echo "$2 ing migration..."
        docker-compose -f $COMPOSE_FILE --env-file ${ENV_FILE} exec haste migrate -path $DB_MIGRATIONS_PATH --database $DB_CONN -verbose $2 1  # 1 indicates do up / down only one last migraton file not all
    elif [[ "$2" = "create" ]]; then
        echo "Creating new migration file ${*:2}..."
        docker-compose -f $COMPOSE_FILE --env-file ${ENV_FILE} exec haste migrate create -ext sql -dir $DB_MIGRATIONS_PATH -seq  ${*:3}
    else
        echo "Invalid command. for help: ./dev-env --help"
    fi
fi

if [[ "$1" = "sqlc" ]]; then
    cd src/haste
    if [[ "$2" = "generate" ]]; then
        echo "generating db query functions..."
        sqlc generate
    fi
fi

if [[ "$1" = 'gendoc' ]]; then
  cd src/haste/infra/driver
  bee generate docs
#   rm -rf _swagger
#   mkdir _swagger
#   mv swagger/swagger.json _swagger/swagger-olympus.json
#   rm -rf swagger
fi

if [[ "$1" = "--help" ]]; then
    echo "
    
    ./dev-env up                                    To start application

    ./dev-env build                                 To build haste and db containers
    ./dev-env build debugger                        To build haste in DEBUG MODE (configured for vscode)

    ./dev-env exec {commands-inside-container}      To run any command in container

    ./dev-env migrate {migaration-name}             To create new migraiton with migaration-name
    ./dev-env migrate up                            To up migration
    ./dev-env migrate down                          To down migration
    
    "
fi